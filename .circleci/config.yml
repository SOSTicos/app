version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/sosticos
    steps:
      - checkout
      - attach_workspace:
          at: ~/sosticos
      - restore_cache:
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install node packages
          command: npm install
      - save_cache:
          key: npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./.next/cache

  test:
    docker:
      - image: circleci/node:latest
    working_directory: ~/sosticos
    steps:
      - checkout
      - attach_workspace:
          at: ~/sosticos
      - restore_cache:
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests
          command: npm run test
  deploy:
    docker:
      - image: circleci/node:latest
    working_directory: ~/sosticos
    steps:
      - checkout
      - attach_workspace:
          at: ~/sosticos
      - restore_cache:
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build Files
          command: npm run build
      - deploy:
          name: Deploy to Amazon Web Services (AWS)
          command: bash scripts/deploy.sh

workflows:
  version: 2.1
  dev-deploy-sosticos-workflow:
    when:
      equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - build:
          context: dev_context
      - test:
          context: dev_context
          requires:
            - build
      - deploy:
          context: dev_context
          requires:
            - test
          filters:
            branches:
              only:
                - master

  prod-deploy-sosticos-workflow:
    when:
      equal: [ production, << pipeline.git.branch >> ]
    jobs:
      - build:
          context: prod_context
      - test:
          context: prod_context
          requires:
            - build
      - deploy:
          context: prod_context
          requires:
            - test
          filters:
            branches:
              only:
                - production
